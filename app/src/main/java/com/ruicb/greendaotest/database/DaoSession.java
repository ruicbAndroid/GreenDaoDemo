package com.ruicb.greendaotest.database;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.ruicb.greendaotest.database.Face;
import com.ruicb.greendaotest.database.Sticker;
import com.ruicb.greendaotest.database.StickerBackground;
import com.ruicb.greendaotest.database.StickerCategory;
import com.ruicb.greendaotest.database.StickerText;
import com.ruicb.greendaotest.database.StickerFont;

import com.ruicb.greendaotest.database.FaceDao;
import com.ruicb.greendaotest.database.StickerDao;
import com.ruicb.greendaotest.database.StickerBackgroundDao;
import com.ruicb.greendaotest.database.StickerCategoryDao;
import com.ruicb.greendaotest.database.StickerTextDao;
import com.ruicb.greendaotest.database.StickerFontDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig faceDaoConfig;
    private final DaoConfig stickerDaoConfig;
    private final DaoConfig stickerBackgroundDaoConfig;
    private final DaoConfig stickerCategoryDaoConfig;
    private final DaoConfig stickerTextDaoConfig;
    private final DaoConfig stickerFontDaoConfig;

    private final FaceDao faceDao;
    private final StickerDao stickerDao;
    private final StickerBackgroundDao stickerBackgroundDao;
    private final StickerCategoryDao stickerCategoryDao;
    private final StickerTextDao stickerTextDao;
    private final StickerFontDao stickerFontDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        faceDaoConfig = daoConfigMap.get(FaceDao.class).clone();
        faceDaoConfig.initIdentityScope(type);

        stickerDaoConfig = daoConfigMap.get(StickerDao.class).clone();
        stickerDaoConfig.initIdentityScope(type);

        stickerBackgroundDaoConfig = daoConfigMap.get(StickerBackgroundDao.class).clone();
        stickerBackgroundDaoConfig.initIdentityScope(type);

        stickerCategoryDaoConfig = daoConfigMap.get(StickerCategoryDao.class).clone();
        stickerCategoryDaoConfig.initIdentityScope(type);

        stickerTextDaoConfig = daoConfigMap.get(StickerTextDao.class).clone();
        stickerTextDaoConfig.initIdentityScope(type);

        stickerFontDaoConfig = daoConfigMap.get(StickerFontDao.class).clone();
        stickerFontDaoConfig.initIdentityScope(type);

        faceDao = new FaceDao(faceDaoConfig, this);
        stickerDao = new StickerDao(stickerDaoConfig, this);
        stickerBackgroundDao = new StickerBackgroundDao(stickerBackgroundDaoConfig, this);
        stickerCategoryDao = new StickerCategoryDao(stickerCategoryDaoConfig, this);
        stickerTextDao = new StickerTextDao(stickerTextDaoConfig, this);
        stickerFontDao = new StickerFontDao(stickerFontDaoConfig, this);

        registerDao(Face.class, faceDao);
        registerDao(Sticker.class, stickerDao);
        registerDao(StickerBackground.class, stickerBackgroundDao);
        registerDao(StickerCategory.class, stickerCategoryDao);
        registerDao(StickerText.class, stickerTextDao);
        registerDao(StickerFont.class, stickerFontDao);
    }
    
    public void clear() {
        faceDaoConfig.clearIdentityScope();
        stickerDaoConfig.clearIdentityScope();
        stickerBackgroundDaoConfig.clearIdentityScope();
        stickerCategoryDaoConfig.clearIdentityScope();
        stickerTextDaoConfig.clearIdentityScope();
        stickerFontDaoConfig.clearIdentityScope();
    }

    public FaceDao getFaceDao() {
        return faceDao;
    }

    public StickerDao getStickerDao() {
        return stickerDao;
    }

    public StickerBackgroundDao getStickerBackgroundDao() {
        return stickerBackgroundDao;
    }

    public StickerCategoryDao getStickerCategoryDao() {
        return stickerCategoryDao;
    }

    public StickerTextDao getStickerTextDao() {
        return stickerTextDao;
    }

    public StickerFontDao getStickerFontDao() {
        return stickerFontDao;
    }

}
